#!/bin/sh
# Copyright (c) 1998 Lawrence Livermore National Security, LLC and other
# HYPRE Project Developers. See the top-level COPYRIGHT file for details.
#
# SPDX-License-Identifier: (Apache-2.0 OR MIT)

# generate header file for transforming multiprecision function names

#===========================================================================
# Create def header file
#===========================================================================

MUP_HEADER=_hypre_krylov_mup_def.h

cat > $MUP_HEADER <<@

/*** DO NOT EDIT THIS FILE DIRECTLY (use 'mup_headers' to generate) ***/

@

# Generate copyright header
../config/write_header.sh >> $MUP_HEADER

cat >> $MUP_HEADER <<@
/******************************************************************************
 * Header file for transforming multiprecision functions names
 *****************************************************************************/

#ifndef hypre_KRYLOV_MUP_DEF_HEADER
#define hypre_KRYLOV_MUP_DEF_HEADER

#include "multiprecision.h"

@

cat>> $MUP_HEADER <<@
$(
cat mup_functions mup_methods mup_none | while read -r func_name
do
# print dressed-up function 
echo "#define $func_name HYPRE_MULTIPRECISION_FUNC ( $func_name )"
done
)

#endif
@

#===========================================================================
# Create undef header file
#===========================================================================

MUP_HEADER=_hypre_krylov_mup_undef.h

cat > $MUP_HEADER <<@

/*** DO NOT EDIT THIS FILE DIRECTLY (use 'mup_headers' to generate) ***/

@

# Generate copyright header
../config/write_header.sh >> $MUP_HEADER

cat >> $MUP_HEADER <<@
/******************************************************************************
 * Header file for transforming multiprecision functions names
 *****************************************************************************/

#undef hypre_KRYLOV_MUP_DEF_HEADER

#include "multiprecision.h"

@

cat>> $MUP_HEADER <<@
$(
cat mup_functions mup_methods mup_none | while read -r func_name
do
echo "#undef $func_name"
done
)
@
