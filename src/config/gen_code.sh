#!/bin/sh
# Copyright (c) 1998 Lawrence Livermore National Security, LLC and other
# HYPRE Project Developers. See the top-level COPYRIGHT file for details.
#
# SPDX-License-Identifier: (Apache-2.0 OR MIT)

# Generate multiprecision code
#
# The script takes an external header file, an internal header file, and an
# output file prefix, then generates various C files and header files.
#
# The generated files begin with the prefix name and contain code corresponding
# to the functions listed in mup.fixed, mup.functions, and mup.methods (methods
# are not fully implemented yet - see NOTE below).
#
# Usage:   <this-script> <external-header> <internal-header> <prefix>
# Example: <this-script> HYPRE_krylov.h _hypre_krylov.h mup

scriptdir=`dirname $0`

EXTH=$1
INTH=$2
OUTP=$3

#### NOTE: Add mup.methods to this later.
####
#### It should be easy to just add it to the loops below, but some up-front
#### preprocessing will be necessary to move existing implementation code out of
#### the way temporarily to prevent overwriting existing code.  Developers will
#### then need to do a manual merge.  The header files can be generated fully
#### automatically as below.

############################################################################
# Make sure the function list files are sorted (list capital letters first)
############################################################################

for i in fixed functions methods
do
    (export LC_COLLATE=C; sort mup.${i}) > mup.${i}.tmp
    mv mup.${i}.tmp mup.${i}
done

############################################################################
# Create temporary files and initial code
############################################################################

# Create file with list of MUP functions and methods
cat mup.functions mup.methods > mup.pre

# Create prototype information files
for i in fixed functions
do
    ./$scriptdir/gen_proto_info.sh mup.${i} ${EXTH} > ${OUTP}.${i}.ext.proto
    ./$scriptdir/gen_proto_info.sh mup.${i} ${INTH} > ${OUTP}.${i}.int.proto
done
cat ${OUTP}.functions.ext.proto > ${OUTP}.pre.ext.proto
cat ${OUTP}.functions.int.proto > ${OUTP}.pre.int.proto

# Create C implementation files and header files
for i in fixed functions pre
do
    ./$scriptdir/gen_${i}_code.sh ${OUTP}.${i}.ext.proto ${OUTP}_${i}_ext
    ./$scriptdir/gen_${i}_code.sh ${OUTP}.${i}.int.proto ${OUTP}_${i}_int
done

############################################################################
# Finalize code
############################################################################

for i in fixed functions pre
do

#========================================
# generate implementation file
#========================================

FOUT=${OUTP}_${i}.c

cat > $FOUT <<@

/*** DO NOT EDIT THIS FILE DIRECTLY (use $0 to generate) ***/

#include "$INTH"

#ifdef HYPRE_MIXED_PRECISION

@

./$scriptdir/write_header.sh >> $FOUT
cat ${OUTP}_${i}_ext.c ${OUTP}_${i}_int.c >> $FOUT

cat >> $FOUT <<@

#endif

@

#========================================
# add header info to the prototype files
#========================================

FOUT=${OUTP}_${i}_ext.h
cat > $FOUT.tmp <<@

/*** DO NOT EDIT THIS FILE DIRECTLY (use $0 to generate) ***/

@
./$scriptdir/write_header.sh >> $FOUT.tmp
cat $FOUT >> $FOUT.tmp
mv $FOUT.tmp $FOUT

FOUT=${OUTP}_${i}_int.h
cat > $FOUT.tmp <<@

/*** DO NOT EDIT THIS FILE DIRECTLY (use $0 to generate) ***/

@
./$scriptdir/write_header.sh >> $FOUT.tmp
cat $FOUT >> $FOUT.tmp
mv $FOUT.tmp $FOUT

done

############################################################################
# Remove temporary files
############################################################################

rm -f mup.pre
rm -f ${OUTP}.*.proto
rm -f ${OUTP}_*_ext.c
rm -f ${OUTP}_*_int.c

